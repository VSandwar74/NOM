### Frontend ###
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
frontend/node_modules
frontend/.pnp
.pnp.js
.yarn/install-state.gz

# testing
frontend/coverage

# next.js
frontend/.next/
frontend/out/

# production
frontend/build

# misc
*.pem

# debug
frontend/npm-debug.log*
frontend/yarn-debug.log*
frontend/yarn-error.log*

# local env files
.env*.local

# vercel
frontend/.vercel

# typescript
*.tsbuildinfo
frontend/next-env.d.ts


### Backend ###
backend/.ipynb_checkpoints
backend/4cxg.csv
backend/LOBSTER_SampleFile_AMZN_2012-06-21_1.zip
backend/Untitled.ipynb
backend/Untitled1.ipynb
backend/__pycache__
backend/add_cancel.csv
backend/first_run.csv
backend/objecttest.ipynb
backend/old_Orderbook.py
backend/orderbook.ipynb
backend/orderbook_2.ipynb
backend/orderbook_3.ipynb
backend/venv

### Contract ###

# Generated smart contract schema JSON types
contract/schema
contract/contracts/*/schema

### Rust ###
# Generated by Cargo
# will have compiled files and executables
contract/debug/
contract/target/
contract/dist

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
# Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

*.profraw

contract/node_modules/
contract/yarn.lock
.vscode/
.idea/

contract/contracts/*/.editorconfig
contract/packages/*/.editorconfig
contract/contracts/*/schema
contract/lcov.info

.DS_Store
contract/artifacts/*.json
